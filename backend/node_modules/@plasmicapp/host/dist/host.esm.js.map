{"version":3,"file":"host.esm.js","sources":["../src/data.ts","../src/lang-utils.ts","../src/registerComponent.ts","../src/repeatedElement.ts","../src/useForceUpdate.ts","../src/index.tsx"],"sourcesContent":["import { PrimitiveType } from \"./index\";\nconst root = globalThis as any;\n\nexport type Fetcher = (...args: any[]) => Promise<any>;\n\nexport interface FetcherMeta {\n  /**\n   * Any unique identifying string for this fetcher.\n   */\n  name: string;\n  /**\n   * The Studio-user-friendly display name.\n   */\n  displayName?: string;\n  /**\n   * The symbol to import from the importPath.\n   */\n  importName?: string;\n  args: { name: string; type: PrimitiveType }[];\n  returns: PrimitiveType;\n  /**\n   * Either the path to the fetcher relative to `rootDir` or the npm\n   * package name\n   */\n  importPath: string;\n  /**\n   * Whether it's a default export or named export\n   */\n  isDefaultExport?: boolean;\n}\n\nexport interface FetcherRegistration {\n  fetcher: Fetcher;\n  meta: FetcherMeta;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicFetcherRegistry: FetcherRegistration[];\n  }\n}\n\nroot.__PlasmicFetcherRegistry = [];\n\nexport function registerFetcher(fetcher: Fetcher, meta: FetcherMeta) {\n  root.__PlasmicFetcherRegistry.push({ fetcher, meta });\n}\n","function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\ntype StringGen = string | (() => string);\n\nexport function ensure<T>(x: T | null | undefined, msg: StringGen = \"\"): T {\n  if (x === null || x === undefined) {\n    debugger;\n    msg = (isString(msg) ? msg : msg()) || \"\";\n    throw new Error(\n      `Value must not be undefined or null${msg ? `- ${msg}` : \"\"}`\n    );\n  } else {\n    return x;\n  }\n}\n","import {\n  CodeComponentElement,\n  CSSProperties,\n  PlasmicElement,\n} from \"./element-types\";\n\nconst root = globalThis as any;\n\ntype PropTypeBase = {\n  displayName?: string;\n  description?: string;\n};\n\ntype StringType =\n  | \"string\"\n  | ({\n      type: \"string\";\n      defaultValue?: string;\n    } & PropTypeBase);\n\ntype BooleanType =\n  | \"boolean\"\n  | ({\n      type: \"boolean\";\n      defaultValue?: boolean;\n    } & PropTypeBase);\n\ntype NumberType =\n  | \"number\"\n  | ({\n      type: \"number\";\n      defaultValue?: number;\n    } & PropTypeBase);\n\ntype JSONLikeType =\n  | \"object\"\n  | ({\n      type: \"object\";\n      /**\n       * Expects a JSON-compatible value\n       */\n      defaultValue?: any;\n    } & PropTypeBase);\n\ntype ChoiceType = {\n  type: \"choice\";\n  options: string[];\n  defaultValue?: string;\n} & PropTypeBase;\n\ntype SlotType =\n  | \"slot\"\n  | {\n      type: \"slot\";\n      /**\n       * The unique names of all code components that can be placed in the slot\n       */\n      allowedComponents?: string[];\n      defaultValue?: PlasmicElement | PlasmicElement[];\n    };\n\nexport type PrimitiveType = Extract<\n  StringType | BooleanType | NumberType | JSONLikeType,\n  String\n>;\n\ntype ControlTypeBase =\n  | {\n      editOnly?: false;\n    }\n  | {\n      editOnly: true;\n      /**\n       * The prop where the values should be mapped to\n       */\n      uncontrolledProp?: string;\n    };\n\ntype SupportControlled<T> =\n  | Extract<T, String>\n  | (Exclude<T, String> & ControlTypeBase);\n\nexport type PropType =\n  | SupportControlled<\n      StringType | BooleanType | NumberType | JSONLikeType | ChoiceType\n    >\n  | SlotType;\n\ntype RestrictPropType<T> = T extends string\n  ? SupportControlled<StringType | ChoiceType | JSONLikeType>\n  : T extends boolean\n  ? SupportControlled<BooleanType | JSONLikeType>\n  : T extends number\n  ? SupportControlled<NumberType | JSONLikeType>\n  : PropType;\n\ninterface ComponentTemplate<P>\n  extends Omit<CodeComponentElement<P>, \"type\" | \"name\"> {\n  /**\n   * A preview picture for the template.\n   */\n  previewImg?: string;\n}\n\nexport interface ComponentTemplates<P> {\n  [name: string]: ComponentTemplate<P>;\n}\n\nexport interface ComponentMeta<P> {\n  /**\n   * Any unique string name used to identify that component. Each component\n   * should be registered with a different `meta.name`, even if they have the\n   * same name in the code.\n   */\n  name: string;\n  /**\n   * The name to be displayed for the component in Studio. Optional: if not\n   * specified, `meta.name` is used.\n   */\n  displayName?: string;\n  /**\n   * The javascript name to be used when generating code. Optional: if not\n   * provided, `meta.name` is used.\n   */\n  importName?: string;\n  /**\n   * An object describing the component properties to be used in Studio.\n   * For each `prop`, there should be an entry `meta.props[prop]` describing\n   * its type.\n   */\n  props: { [prop in keyof Partial<P>]: RestrictPropType<P[prop]> } & {\n    [prop: string]: PropType;\n  };\n  /**\n   * The path to be used when importing the component in the generated code.\n   * It can be the name of the package that contains the component, or the path\n   * to the file in the project (relative to the root directory).\n   */\n  importPath: string;\n  /**\n   *  Whether the component is the default export from that path. Optional: if\n   * not specified, it's considered `false`.\n   */\n  isDefaultExport?: boolean;\n  /**\n   * The prop that expects the CSS classes with styles to be applied to the\n   * component. Optional: if not specified, Plasmic will expect it to be\n   * `className`. Notice that if the component does not accept CSS classes, the\n   * component will not be able to receive styles from the Studio.\n   */\n  classNameProp?: string;\n  /**\n   * The prop that receives and forwards a React `ref`. Plasmic only uses `ref`\n   * to interact with components, so it's not used in the generated code.\n   * Optional: If not provided, the usual `ref` is used.\n   */\n  refProp?: string;\n  /**\n   * Default styles to start with when instantiating the component in Plasmic.\n   */\n  defaultStyles?: CSSProperties;\n  /**\n   * Component templates to start with on Plasmic.\n   */\n  templates?: ComponentTemplates<P>;\n}\n\nexport interface ComponentRegistration {\n  component: React.ComponentType<any>;\n  meta: ComponentMeta<any>;\n}\n\ndeclare global {\n  interface Window {\n    __PlasmicComponentRegistry: ComponentRegistration[];\n  }\n}\n\nif (root.__PlasmicComponentRegistry == null) {\n  root.__PlasmicComponentRegistry = [];\n}\n\nexport default function registerComponent<T extends React.ComponentType<any>>(\n  component: T,\n  meta: ComponentMeta<React.ComponentProps<T>>\n) {\n  root.__PlasmicComponentRegistry.push({ component, meta });\n}\n","import { cloneElement, isValidElement } from \"react\";\n\n/**\n * Allows a component from Plasmic Studio to be repeated.\n * `isPrimary` should be true for at most one instance of the component, and\n * indicates which copy of the element will be highlighted when the element is\n * selected in Studio.\n * If `isPrimary` is `false`, and `elt` is a React element (or an array of such),\n * it'll be cloned (using React.cloneElement) and ajusted if it's a component\n * from Plasmic Studio. Otherwise, if `elt` is not a React element, the original\n * value is returned.\n */\nexport default function repeatedElement<T,>(isPrimary: boolean, elt: T): T {\n  return repeatedElementFn(isPrimary, elt);\n}\n\nlet repeatedElementFn = <T,>(isPrimary: boolean, elt: T): T => {\n  if (isPrimary) {\n    return elt;\n  }\n  if (Array.isArray(elt)) {\n    return elt.map((v) => repeatedElement(isPrimary, v)) as any as T;\n  }\n  if (elt && isValidElement(elt) && typeof elt !== \"string\") {\n    return cloneElement(elt) as any as T;\n  }\n  return elt;\n}\n\nexport function setRepeatedElementFn(fn: typeof repeatedElement) {\n  repeatedElementFn = fn;\n}\n\n\n","import { useCallback, useState } from \"react\";\n\nexport default function useForceUpdate() {\n  const [, setTick] = useState(0);\n  const update = useCallback(() => {\n    setTick((tick) => tick + 1);\n  }, []);\n  return update;\n}\n","// tslint:disable:ordered-imports\n// organize-imports-ignore\nimport \"@plasmicapp/preamble\";\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { registerFetcher as unstable_registerFetcher } from \"./data\";\nimport { PlasmicElement } from \"./element-types\";\nimport { ensure } from \"./lang-utils\";\nimport registerComponent, {\n  ComponentMeta,\n  ComponentRegistration,\n  ComponentTemplates,\n  PrimitiveType,\n  PropType,\n} from \"./registerComponent\";\nimport repeatedElement, { setRepeatedElementFn } from \"./repeatedElement\";\nimport useForceUpdate from \"./useForceUpdate\";\nconst root = globalThis as any;\n\nexport { unstable_registerFetcher };\nexport { repeatedElement };\nexport {\n  registerComponent,\n  ComponentMeta,\n  ComponentRegistration,\n  ComponentTemplates,\n  PrimitiveType,\n  PropType,\n};\nexport { PlasmicElement };\n\ndeclare global {\n  interface Window {\n    __PlasmicHostVersion: string;\n  }\n}\n\nif (root.__PlasmicHostVersion == null) {\n  root.__PlasmicHostVersion = \"1\";\n}\n\nconst rootChangeListeners: (() => void)[] = [];\nclass PlasmicRootNodeWrapper {\n  constructor(private value: null | React.ReactElement) {}\n  set = (val: null | React.ReactElement) => {\n    this.value = val;\n    rootChangeListeners.forEach((f) => f());\n  };\n  get = () => this.value;\n}\n\nconst plasmicRootNode = new PlasmicRootNodeWrapper(null);\n\nif (root.__Sub == null) {\n  root.__Sub = {\n    React,\n    ReactDOM,\n    setPlasmicRootNode,\n    registerRenderErrorListener,\n    repeatedElement,\n    setRepeatedElementFn,\n  };\n}\n\nfunction getPlasmicOrigin() {\n  const params = new URL(`https://fakeurl/${location.hash.replace(/#/, \"?\")}`)\n    .searchParams;\n  return ensure(\n    params.get(\"origin\"),\n    \"Missing information from Plasmic window.\"\n  );\n}\n\nfunction renderStudioIntoIframe() {\n  const script = document.createElement(\"script\");\n  const plasmicOrigin = getPlasmicOrigin();\n  script.src = plasmicOrigin + \"/static/js/studio.js\";\n  document.body.appendChild(script);\n}\n\nlet renderCount = 0;\nfunction setPlasmicRootNode(node: React.ReactElement | null) {\n  // Keep track of renderCount, which we use as key to ErrorBoundary, so\n  // we can reset the error on each render\n  renderCount++;\n  plasmicRootNode.set(node);\n}\n\n/**\n * React context to detect whether the component is rendered on Plasmic editor.\n */\nexport const PlasmicCanvasContext = React.createContext<boolean>(false);\n\nfunction _PlasmicCanvasHost() {\n  // If window.parent is null, then this is a window whose containing iframe\n  // has been detached from the DOM (for the top window, window.parent === window).\n  // In that case, we shouldn't do anything.  If window.parent is null, by the way,\n  // location.hash will also be null.\n  const isFrameAttached = !!window.parent;\n  const isCanvas = !!location.hash?.match(/\\bcanvas=true\\b/);\n  const isLive = !!location.hash?.match(/\\blive=true\\b/) || !isFrameAttached;\n  const shouldRenderStudio =\n    isFrameAttached &&\n    !document.querySelector(\"#plasmic-studio-tag\") &&\n    !isCanvas &&\n    !isLive;\n  const forceUpdate = useForceUpdate();\n  React.useLayoutEffect(() => {\n    rootChangeListeners.push(forceUpdate);\n    return () => {\n      const index = rootChangeListeners.indexOf(forceUpdate);\n      if (index >= 0) {\n        rootChangeListeners.splice(index, 1);\n      }\n    };\n  }, [forceUpdate]);\n  React.useEffect(() => {\n    if (shouldRenderStudio && isFrameAttached && window.parent !== window) {\n      renderStudioIntoIframe();\n    }\n  }, [shouldRenderStudio, isFrameAttached]);\n  React.useEffect(() => {\n    if (!shouldRenderStudio && !document.querySelector(\"#getlibs\") && isLive) {\n      const scriptElt = document.createElement(\"script\");\n      scriptElt.id = \"getlibs\";\n      scriptElt.src = getPlasmicOrigin() + \"/static/js/getlibs.js\";\n      scriptElt.async = false;\n      scriptElt.onload = () => {\n        (window as any).__GetlibsReadyResolver?.();\n      };\n      document.head.append(scriptElt);\n    }\n  }, [shouldRenderStudio]);\n  if (!isFrameAttached) {\n    return null;\n  }\n  if (isCanvas || isLive) {\n    let appDiv = document.querySelector(\"#plasmic-app.__wab_user-body\");\n    if (!appDiv) {\n      appDiv = document.createElement(\"div\");\n      appDiv.id = \"plasmic-app\";\n      appDiv.classList.add(\"__wab_user-body\");\n      document.body.appendChild(appDiv);\n    }\n    return ReactDOM.createPortal(\n      <ErrorBoundary key={`${renderCount}`}>\n        <PlasmicCanvasContext.Provider value={isCanvas}>\n          {plasmicRootNode.get()}\n        </PlasmicCanvasContext.Provider>\n      </ErrorBoundary>,\n      appDiv,\n      \"plasmic-app\"\n    );\n  }\n  if (shouldRenderStudio && window.parent === window) {\n    return (\n      <p>\n        Your app is ready to host Plasmic Studio! <br /> <br />\n        On the <a href=\"https://studio.plasmic.app/\">Dashboard</a>, click on the{\" \"}\n        <i>Config</i> button, and set{\" \"}\n        <code>{location.origin + location.pathname}</code> as the host URL.\n        <br />\n        <br />\n        You can find more information about app-hosting{\" \"}\n        <a href=\"https://www.plasmic.app/learn/app-hosting/\">here</a>.\n      </p>\n    );\n  }\n  return null;\n}\n\ninterface PlasmicCanvasHostProps {\n  /**\n   * Webpack hmr uses EventSource to\tlisten to hot reloads, but that\n   * resultsin a persistent\tconnection from\teach window.  In Plasmic\n   * Studio, if a project is configured to use app-hosting with a\n   * nextjs or gatsby server running in dev mode, each artboard will\n   * be holding a persistent connection to the dev server.\n   * Because browsers\thave a limit to\thow many connections can\n   * be held\tat a time by domain, this means\tafter X\tartboards, new\n   * artboards will freeze and not load.\n   *\n   * By default, <PlasmicCanvasHost /> will globally mutate\n   * window.EventSource to avoid using EventSource for HMR, which you\n   * typically don't need for your custom host page.  If you do still\n   * want to retain HRM, then youc an pass enableWebpackHmr={true}.\n   */\n  enableWebpackHmr?: boolean;\n}\n\nexport const PlasmicCanvasHost: React.FunctionComponent<PlasmicCanvasHostProps> = (\n  props\n) => {\n  const { enableWebpackHmr } = props;\n  const [node, setNode] = React.useState<React.ReactElement<any, any> | null>(\n    null\n  );\n  React.useEffect(() => {\n    setNode(<_PlasmicCanvasHost />);\n  }, []);\n  return (\n    <>\n      {!enableWebpackHmr && <DisableWebpackHmr />}\n      {node}\n    </>\n  );\n};\n\ntype RenderErrorListener = (err: Error) => void;\nconst renderErrorListeners: RenderErrorListener[] = [];\nfunction registerRenderErrorListener(listener: RenderErrorListener) {\n  renderErrorListeners.push(listener);\n  return () => {\n    const index = renderErrorListeners.indexOf(listener);\n    if (index >= 0) {\n      renderErrorListeners.splice(index, 1);\n    }\n  };\n}\n\ninterface ErrorBoundaryProps {\n  children?: React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n}\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  componentDidCatch(error: Error) {\n    renderErrorListeners.forEach((listener) => listener(error));\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {`${this.state.error.message}`}</div>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nfunction DisableWebpackHmr() {\n  if (process.env.NODE_ENV === \"production\") {\n    return null;\n  }\n  return (\n    <script\n      type=\"text/javascript\"\n      dangerouslySetInnerHTML={{\n        __html: `\n      if (typeof window !== \"undefined\") {\n        const RealEventSource = window.EventSource;\n        window.EventSource = function(url, config) {\n          if (/[^a-zA-Z]hmr($|[^a-zA-Z])/.test(url)) {\n            console.warn(\"Plasmic: disabled EventSource request for\", url);\n            return {\n              onerror() {}, onmessage() {}, onopen() {}, close() {}\n            };\n          } else {\n            return new RealEventSource(url, config);\n          }\n        }\n      }\n      `,\n      }}\n    ></script>\n  );\n}\n"],"names":["root","globalThis","__PlasmicFetcherRegistry","registerFetcher","fetcher","meta","push","isString","x","ensure","msg","undefined","Error","__PlasmicComponentRegistry","registerComponent","component","repeatedElement","isPrimary","elt","repeatedElementFn","Array","isArray","map","v","isValidElement","cloneElement","setRepeatedElementFn","fn","useForceUpdate","useState","setTick","update","useCallback","tick","__PlasmicHostVersion","rootChangeListeners","PlasmicRootNodeWrapper","value","val","forEach","f","plasmicRootNode","__Sub","React","ReactDOM","setPlasmicRootNode","registerRenderErrorListener","getPlasmicOrigin","params","URL","location","hash","replace","searchParams","get","renderStudioIntoIframe","script","document","createElement","plasmicOrigin","src","body","appendChild","renderCount","node","set","PlasmicCanvasContext","_PlasmicCanvasHost","isFrameAttached","window","parent","isCanvas","match","isLive","shouldRenderStudio","querySelector","forceUpdate","index","indexOf","splice","scriptElt","id","async","onload","__GetlibsReadyResolver","head","append","appDiv","classList","add","ErrorBoundary","key","Provider","href","origin","pathname","PlasmicCanvasHost","props","enableWebpackHmr","setNode","DisableWebpackHmr","renderErrorListeners","listener","state","getDerivedStateFromError","error","componentDidCatch","render","message","children","process","env","NODE_ENV","type","dangerouslySetInnerHTML","__html"],"mappings":"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"}